name: Release Packages

on:
  push:
    branches:
      - main

jobs:
  publish:
    if: github.event_name == 'pull_request' && (contains(github.event.pull_request.title, 'js-plugins') || contains(github.event.pull_request.title, 'all'))

    runs-on: ubuntu-latest

    name: release

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.GH_TOKEN }}

      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      - name: Update Master
        run: |
          git pull --force --no-tags origin main:main
          git checkout main
          git fetch --tags

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Enable Corepack
        id: pnpm-setup
        run: |
          corepack enable

      - name: pnpm Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-setup.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Initliaze .npmrc
        run: >
          echo -e "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}\n$(cat .npmrc)" > .npmrc
          && cat -n .npmrc

      - name: pnpm install
        run: pnpm install --frozen-lockfile

      - name: Build Packages
        run: |
          pnpm --filter "{js-plugins}[origin/main]" build

      - name: Release and Publish Packages
        run: |
            npm set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }} && npm config set access public && pnpm --filter "{js-plugins}[origin/main]" publish --no-git-checks

